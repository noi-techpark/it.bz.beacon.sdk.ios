// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

//
// OrderControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OrderControllerAPI {
    /**
     Create an order for all unordered beacons
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createUsingPOST3(completion: @escaping ((_ data: BeaconOrder?,_ error: Error?) -> Void)) {
        createUsingPOST3WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create an order for all unordered beacons
     - POST /v1/admin/orders
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example={
  "orderSymbol" : "orderSymbol",
  "beacons" : [ {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  }, {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  } ]
}}]

     - returns: RequestBuilder<BeaconOrder> 
     */
    open class func createUsingPOST3WithRequestBuilder() -> RequestBuilder<BeaconOrder> {
        let path = "/v1/admin/orders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<BeaconOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Search a order by order symbol
     
     - parameter orderSymbol: (path) orderSymbol 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func downloadCsvUsingGET(orderSymbol: String, completion: @escaping ((_ data: Resource?,_ error: Error?) -> Void)) {
        downloadCsvUsingGETWithRequestBuilder(orderSymbol: orderSymbol).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Search a order by order symbol
     - GET /v1/admin/orders/csv/{orderSymbol}
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example={
  "readable" : true,
  "file" : {
    "parent" : "parent",
    "parentFile" : null,
    "hidden" : true,
    "freeSpace" : 0,
    "totalSpace" : 6,
    "usableSpace" : 1,
    "canonicalFile" : null,
    "directory" : true,
    "path" : "path",
    "absoluteFile" : null,
    "file" : true,
    "absolute" : true,
    "canonicalPath" : "canonicalPath",
    "name" : "name",
    "absolutePath" : "absolutePath"
  },
  "filename" : "filename",
  "description" : "description",
  "inputStream" : { },
  "uri" : {
    "rawFragment" : "rawFragment",
    "userInfo" : "userInfo",
    "opaque" : true,
    "scheme" : "scheme",
    "query" : "query",
    "schemeSpecificPart" : "schemeSpecificPart",
    "rawUserInfo" : "rawUserInfo",
    "path" : "path",
    "fragment" : "fragment",
    "rawPath" : "rawPath",
    "port" : 5,
    "rawSchemeSpecificPart" : "rawSchemeSpecificPart",
    "absolute" : true,
    "rawAuthority" : "rawAuthority",
    "authority" : "authority",
    "host" : "host",
    "rawQuery" : "rawQuery"
  },
  "open" : true,
  "url" : {
    "defaultPort" : 5,
    "path" : "path",
    "userInfo" : "userInfo",
    "protocol" : "protocol",
    "ref" : "ref",
    "file" : "file",
    "port" : 2,
    "authority" : "authority",
    "query" : "query",
    "host" : "host",
    "content" : "{}"
  }
}}]
     
     - parameter orderSymbol: (path) orderSymbol 

     - returns: RequestBuilder<Resource> 
     */
    open class func downloadCsvUsingGETWithRequestBuilder(orderSymbol: String) -> RequestBuilder<Resource> {
        var path = "/v1/admin/orders/csv/{orderSymbol}"
        path = path.replacingOccurrences(of: "{orderSymbol}", with: "\(orderSymbol)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Resource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     View a list of all orders
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getListUsingGET5(completion: @escaping ((_ data: [BeaconOrder]?,_ error: Error?) -> Void)) {
        getListUsingGET5WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     View a list of all orders
     - GET /v1/admin/orders
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example=[ {
  "orderSymbol" : "orderSymbol",
  "beacons" : [ {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  }, {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  } ]
}, {
  "orderSymbol" : "orderSymbol",
  "beacons" : [ {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  }, {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  } ]
} ]}]

     - returns: RequestBuilder<[BeaconOrder]> 
     */
    open class func getListUsingGET5WithRequestBuilder() -> RequestBuilder<[BeaconOrder]> {
        let path = "/v1/admin/orders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[BeaconOrder]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Search a order by order symbol
     
     - parameter orderSymbol: (path) orderSymbol 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsingGET3(orderSymbol: String, completion: @escaping ((_ data: BeaconOrder?,_ error: Error?) -> Void)) {
        getUsingGET3WithRequestBuilder(orderSymbol: orderSymbol).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Search a order by order symbol
     - GET /v1/admin/orders/{orderSymbol}
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example={
  "orderSymbol" : "orderSymbol",
  "beacons" : [ {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  }, {
    "instanceId" : "instanceId",
    "major" : 0,
    "minor" : 6,
    "namespace" : "namespace",
    "zoneId" : 1,
    "beaconId" : "beaconId",
    "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "zoneCode" : "zoneCode"
  } ]
}}]
     
     - parameter orderSymbol: (path) orderSymbol 

     - returns: RequestBuilder<BeaconOrder> 
     */
    open class func getUsingGET3WithRequestBuilder(orderSymbol: String) -> RequestBuilder<BeaconOrder> {
        var path = "/v1/admin/orders/{orderSymbol}"
        path = path.replacingOccurrences(of: "{orderSymbol}", with: "\(orderSymbol)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<BeaconOrder>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
