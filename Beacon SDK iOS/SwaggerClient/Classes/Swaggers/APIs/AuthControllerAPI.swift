// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

//
// AuthControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class AuthControllerAPI {
    /**
     Check whether a token is valid or not
     
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func checkTokenUsingPOST(request: AuthenticationTokenCheckRequest, completion: @escaping ((_ data: AuthenticationTokenCheck?,_ error: Error?) -> Void)) {
        checkTokenUsingPOSTWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Check whether a token is valid or not
     - POST /v1/checkToken
     - examples: [{contentType=application/json, example={
  "valid" : true,
  "token" : "token"
}}]
     
     - parameter request: (body) request 

     - returns: RequestBuilder<AuthenticationTokenCheck> 
     */
    open class func checkTokenUsingPOSTWithRequestBuilder(request: AuthenticationTokenCheckRequest) -> RequestBuilder<AuthenticationTokenCheck> {
        let path = "/v1/checkToken"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthenticationTokenCheck>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     signin
     
     - parameter data: (body) data 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func signinUsingPOST(data: AuthenticationRequest, completion: @escaping ((_ data: AuthenticationToken?,_ error: Error?) -> Void)) {
        signinUsingPOSTWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     signin
     - POST /v1/signin
     - examples: [{output=none}]
     
     - parameter data: (body) data 

     - returns: RequestBuilder<AuthenticationToken> 
     */
    open class func signinUsingPOSTWithRequestBuilder(data: AuthenticationRequest) -> RequestBuilder<AuthenticationToken> {
        let path = "/v1/signin"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: data)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthenticationToken>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
