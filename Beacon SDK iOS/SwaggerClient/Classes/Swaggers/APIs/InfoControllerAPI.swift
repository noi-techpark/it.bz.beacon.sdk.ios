// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

//
// InfoControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class InfoControllerAPI {
    /**
     Search a info with an Eddystone instanceId value
     
     - parameter instanceId: (path) instanceId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEddyStoneUsingGET(instanceId: String, completion: @escaping ((_ data: Info?,_ error: Error?) -> Void)) {
        getEddyStoneUsingGETWithRequestBuilder(instanceId: instanceId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Search a info with an Eddystone instanceId value
     - GET /v1/infos/eddystone/{instanceId}
     - examples: [{contentType=application/json, example={
  "website" : "website",
  "address" : "address",
  "minor" : 5,
  "latitude" : 0.8008281904610115,
  "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "cap" : "cap",
  "instanceId" : "instanceId",
  "major" : 1,
  "name" : "name",
  "namespace" : "namespace",
  "location" : "location",
  "id" : "id",
  "floor" : "floor",
  "longitude" : 6.027456183070403,
  "updatedAt" : 5
}}]
     
     - parameter instanceId: (path) instanceId 

     - returns: RequestBuilder<Info> 
     */
    open class func getEddyStoneUsingGETWithRequestBuilder(instanceId: String) -> RequestBuilder<Info> {
        var path = "/v1/infos/eddystone/{instanceId}"
        path = path.replacingOccurrences(of: "{instanceId}", with: "\(instanceId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Info>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     View a list of all infos
     
     - parameter updatedAfter: (query) updatedAfter (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getListUsingGET2(updatedAfter: Int64? = nil, completion: @escaping ((_ data: [Info]?,_ error: Error?) -> Void)) {
        getListUsingGET2WithRequestBuilder(updatedAfter: updatedAfter).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     View a list of all infos
     - GET /v1/infos
     - examples: [{contentType=application/json, example=[ {
  "website" : "website",
  "address" : "address",
  "minor" : 5,
  "latitude" : 0.8008281904610115,
  "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "cap" : "cap",
  "instanceId" : "instanceId",
  "major" : 1,
  "name" : "name",
  "namespace" : "namespace",
  "location" : "location",
  "id" : "id",
  "floor" : "floor",
  "longitude" : 6.027456183070403,
  "updatedAt" : 5
}, {
  "website" : "website",
  "address" : "address",
  "minor" : 5,
  "latitude" : 0.8008281904610115,
  "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "cap" : "cap",
  "instanceId" : "instanceId",
  "major" : 1,
  "name" : "name",
  "namespace" : "namespace",
  "location" : "location",
  "id" : "id",
  "floor" : "floor",
  "longitude" : 6.027456183070403,
  "updatedAt" : 5
} ]}]
     
     - parameter updatedAfter: (query) updatedAfter (optional)

     - returns: RequestBuilder<[Info]> 
     */
    open class func getListUsingGET2WithRequestBuilder(updatedAfter: Int64? = nil) -> RequestBuilder<[Info]> {
        let path = "/v1/infos"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "updatedAfter": updatedAfter?.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<[Info]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Search a info with an ID
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsingGET1(id: String, completion: @escaping ((_ data: Info?,_ error: Error?) -> Void)) {
        getUsingGET1WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Search a info with an ID
     - GET /v1/infos/{id}
     - examples: [{contentType=application/json, example={
  "website" : "website",
  "address" : "address",
  "minor" : 5,
  "latitude" : 0.8008281904610115,
  "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "cap" : "cap",
  "instanceId" : "instanceId",
  "major" : 1,
  "name" : "name",
  "namespace" : "namespace",
  "location" : "location",
  "id" : "id",
  "floor" : "floor",
  "longitude" : 6.027456183070403,
  "updatedAt" : 5
}}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<Info> 
     */
    open class func getUsingGET1WithRequestBuilder(id: String) -> RequestBuilder<Info> {
        var path = "/v1/infos/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Info>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Search a info with an iBeacon major and minor value
     
     - parameter major: (path) major 
     - parameter minor: (path) minor 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getiBeaconUsingGET(major: Int, minor: Int, completion: @escaping ((_ data: Info?,_ error: Error?) -> Void)) {
        getiBeaconUsingGETWithRequestBuilder(major: major, minor: minor).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Search a info with an iBeacon major and minor value
     - GET /v1/infos/ibeacon/{major}/{minor}
     - examples: [{contentType=application/json, example={
  "website" : "website",
  "address" : "address",
  "minor" : 5,
  "latitude" : 0.8008281904610115,
  "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "cap" : "cap",
  "instanceId" : "instanceId",
  "major" : 1,
  "name" : "name",
  "namespace" : "namespace",
  "location" : "location",
  "id" : "id",
  "floor" : "floor",
  "longitude" : 6.027456183070403,
  "updatedAt" : 5
}}]
     
     - parameter major: (path) major 
     - parameter minor: (path) minor 

     - returns: RequestBuilder<Info> 
     */
    open class func getiBeaconUsingGETWithRequestBuilder(major: Int, minor: Int) -> RequestBuilder<Info> {
        var path = "/v1/infos/ibeacon/{major}/{minor}"
        path = path.replacingOccurrences(of: "{major}", with: "\(major)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{minor}", with: "\(minor)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Info>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
