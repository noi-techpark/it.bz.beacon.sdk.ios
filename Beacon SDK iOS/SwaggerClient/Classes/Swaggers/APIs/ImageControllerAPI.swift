// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

//
// ImageControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ImageControllerAPI {
    /**
     Create an image for a beacon
     
     - parameter beaconId: (path) beaconId 
     - parameter file: (form) file 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createUsingPOST1(beaconId: String, file: URL, completion: @escaping ((_ data: BeaconImage?,_ error: Error?) -> Void)) {
        createUsingPOST1WithRequestBuilder(beaconId: beaconId, file: file).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create an image for a beacon
     - POST /v1/admin/beacons/{beaconId}/images
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example={
  "fileName" : "fileName",
  "id" : 0
}}]
     
     - parameter beaconId: (path) beaconId 
     - parameter file: (form) file 

     - returns: RequestBuilder<BeaconImage> 
     */
    open class func createUsingPOST1WithRequestBuilder(beaconId: String, file: URL) -> RequestBuilder<BeaconImage> {
        var path = "/v1/admin/beacons/{beaconId}/images"
        path = path.replacingOccurrences(of: "{beaconId}", with: "\(beaconId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "file": file
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<BeaconImage>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Delete an image
     
     - parameter beaconId: (path) beaconId 
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUsingDELETE(beaconId: String, id: Int64, completion: @escaping ((_ data: BaseMessage?,_ error: Error?) -> Void)) {
        deleteUsingDELETEWithRequestBuilder(beaconId: beaconId, id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Delete an image
     - DELETE /v1/admin/beacons/{beaconId}/images/{id}
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example={
  "message" : "message"
}}]
     
     - parameter beaconId: (path) beaconId 
     - parameter id: (path) id 

     - returns: RequestBuilder<BaseMessage> 
     */
    open class func deleteUsingDELETEWithRequestBuilder(beaconId: String, id: Int64) -> RequestBuilder<BaseMessage> {
        var path = "/v1/admin/beacons/{beaconId}/images/{id}"
        path = path.replacingOccurrences(of: "{beaconId}", with: "\(beaconId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<BaseMessage>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     View a list of available images for a beacon
     
     - parameter beaconId: (path) beaconId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getListUsingGET1(beaconId: String, completion: @escaping ((_ data: [BeaconImage]?,_ error: Error?) -> Void)) {
        getListUsingGET1WithRequestBuilder(beaconId: beaconId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     View a list of available images for a beacon
     - GET /v1/admin/beacons/{beaconId}/images
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{contentType=application/json, example=[ {
  "fileName" : "fileName",
  "id" : 0
}, {
  "fileName" : "fileName",
  "id" : 0
} ]}]
     
     - parameter beaconId: (path) beaconId 

     - returns: RequestBuilder<[BeaconImage]> 
     */
    open class func getListUsingGET1WithRequestBuilder(beaconId: String) -> RequestBuilder<[BeaconImage]> {
        var path = "/v1/admin/beacons/{beaconId}/images"
        path = path.replacingOccurrences(of: "{beaconId}", with: "\(beaconId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[BeaconImage]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an image for a beacon
     
     - parameter beaconId: (path) beaconId 
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func serveFileUsingGET(beaconId: String, id: Int64, completion: @escaping ((_ data: Resource?,_ error: Error?) -> Void)) {
        serveFileUsingGETWithRequestBuilder(beaconId: beaconId, id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get an image for a beacon
     - GET /v1/admin/beacons/{beaconId}/images/{id}
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{output=none}]
     
     - parameter beaconId: (path) beaconId 
     - parameter id: (path) id 

     - returns: RequestBuilder<Resource> 
     */
    open class func serveFileUsingGETWithRequestBuilder(beaconId: String, id: Int64) -> RequestBuilder<Resource> {
        var path = "/v1/admin/beacons/{beaconId}/images/{id}"
        path = path.replacingOccurrences(of: "{beaconId}", with: "\(beaconId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Resource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
