// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

//
// IssueCreation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class IssueCreation: Codable {

    public var beaconId: String
    public var problem: String
    public var problemDescription: String?
    public var reporter: String


    
    public init(beaconId: String, problem: String, problemDescription: String?, reporter: String) {
        self.beaconId = beaconId
        self.problem = problem
        self.problemDescription = problemDescription
        self.reporter = reporter
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(beaconId, forKey: "beaconId")
        try container.encode(problem, forKey: "problem")
        try container.encodeIfPresent(problemDescription, forKey: "problemDescription")
        try container.encode(reporter, forKey: "reporter")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        beaconId = try container.decode(String.self, forKey: "beaconId")
        problem = try container.decode(String.self, forKey: "problem")
        problemDescription = try container.decodeIfPresent(String.self, forKey: "problemDescription")
        reporter = try container.decode(String.self, forKey: "reporter")
    }
}

